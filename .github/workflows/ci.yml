# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ] # Runs on pushes to the main branch
  pull_request:
    branches: [ "main" ] # Runs on pull requests targeting main

jobs:
  build-and-test:
    name: Build, Lint, and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # <-- ADD THIS STEP

      - name: Create .env.test file from your local version
        run: |
          echo "DATABASE_NAME=mydb" >> .env.test
          echo "DATABASE_USER=myuser" >> .env.test
          echo "DATABASE_PASSWORD=mypass" >> .env.test
          echo "DATABASE_PORT=5432" >> .env.test
          echo "WRITER_DB_HOST=db" >> .env.test
          echo "READER_DB_HOST=db" >> .env.test
          echo "REDIS_HOST=redis" >> .env.test
          echo "REDIS_PORT=6379" >> .env.test

      - name: Lint with flake8
        run: docker-compose run --rm web flake8 .

      - name: Run tests and generate coverage report
        # The command for the 'test' service is already set to create a coverage report file
        run: docker-compose run --rm test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage_report.txt

  push-to-dockerhub:
    name: Push to Docker Hub
    # This job depends on the 'build-and-test' job finishing successfully
    needs: build-and-test
    # This job only runs on a direct push to the 'main' branch, not on pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # The image will be built based on the Dockerfile in your root directory
          push: true
          tags: 2000023946/auth-app:latest # <-- CHANGE THIS